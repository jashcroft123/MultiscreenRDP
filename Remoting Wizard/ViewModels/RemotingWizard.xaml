<UserControl x:Class="Remoting_Wizard.ViewModels.RemotingWizard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Binding="clr-namespace:Remoting_Wizard.Converters"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <Binding:ModeToVisibiltyConverter x:Key="ModeToVisibiltyConverter"/>
            <Binding:MinCountToVisibilityConverter x:Key="MinCountToVisibilityConverter"/>

            <Style TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="24"/>
            </Style>
            
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Orange" CornerRadius="4,4,0,0" Margin="2,0">
                                <TextBlock Name="Panel">
                                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                                </TextBlock>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Panel" Property="Foreground" Value="Black"/>
                                    <Setter TargetName="Panel" Property="Background" Value= "Orange"/>
                                    <Setter TargetName="Panel" Property="TextBlock.FontSize" Value="24"/>
                                </Trigger>

                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Panel" Property="Foreground" Value="Orange"/>
                                    <Setter TargetName="Panel" Property="Background" Value="Transparent"/>
                                    <Setter TargetName="Panel" Property="TextBlock.FontSize" Value="24"/>
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="True" SourceName="Border">
                                    <Setter TargetName="Panel" Property="Foreground" Value="white"/>
                                    <Setter TargetName="Panel" Property="TextBlock.FontSize" Value="24"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="FontSize" Value="{Binding Path=FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"/>
                <Setter Property="Foreground" Value="#FF9A35"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent" Cursor="Hand" CornerRadius="5">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#787878" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF9A35"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid VerticalAlignment="Top" Margin="20,5">
        <TabControl Margin="0,10,0,0" Background="Transparent" BorderThickness="0.5" BorderBrush="#FF9A35">

            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged" >
                    <prism:InvokeCommandAction Command="{Binding SavePressed}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>-->

            <TabItem  Header="Connect">
                <StackPanel  HorizontalAlignment="Center" Margin="20">
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="8*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="6*"/>
                            <RowDefinition Height="6*"/>
                        </Grid.RowDefinitions>

                        <Label x:Name="Padding" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Margin="10"/>

                        <Label Content="Mode:" Grid.Column="0" Grid.Row="0" Width="125"  HorizontalAlignment="Right"/>
                        <ComboBox x:Name="ComboBoxMode" Grid.Column="2" Grid.Row="0" MinWidth="260" SelectedIndex="0" ItemsSource="{Binding Modes}" SelectedItem="{Binding SelectedMode,Mode=TwoWay}" DisplayMemberPath="Mode"/>

                        <TextBlock Text="PC:" Grid.Column="0" Grid.Row="1" Width="125" HorizontalAlignment="Right" TextAlignment="Right"/>
                        <ComboBox x:Name="ComboBoxPCs" Grid.Column="2" Grid.Row="1" MinWidth="260" ItemsSource="{Binding Alias}" SelectedIndex="0" SelectedItem="{Binding SelectedAlias, Mode=TwoWay}"/>

                    </Grid>

                    <!--#region Remote Connection-->
                    <StackPanel Visibility="{Binding SelectedMode,Converter={StaticResource ModeToVisibiltyConverter},ConverterParameter='Remote Connection'}" >
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center"  Visibility="{Binding Usernames.Count,Converter={StaticResource MinCountToVisibilityConverter},ConverterParameter=1}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="8*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4*"/>
                                <RowDefinition Height="4*"/>
                                <RowDefinition Height="4*"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="PaddingUserName" Grid.Column="1" Grid.Row="0" Grid.RowSpan="1" Margin="10"/>

                            <TextBlock Text="User Name:" Grid.Column="0" Grid.Row="0" Width="125" HorizontalAlignment="Right" TextAlignment="Right" />
                            <ComboBox x:Name="ComboBoxUsernames" Grid.Column="2" Grid.Row="0" MinWidth="260" ItemsSource="{Binding Usernames}" SelectedIndex="0" SelectedItem="{Binding SelectedUserName, Mode=TwoWay}"/>
                        </Grid>


                        <Border CornerRadius="10" BorderBrush="Gray" BorderThickness="2.5" Width="Auto" Height="Auto" Margin="10">
                            <Grid Margin="15">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="{Binding MaxWidth}"/>
                                    <ColumnDefinition Width="50"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition Height="10*"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="Select Screens" Grid.Column="1" Grid.Row="0"/>
                                <Button x:Name="Refresh" Command="{Binding BtnRefresh}" Content="⟳" HorizontalAlignment="Right" Width="50" Height="40" HorizontalContentAlignment="Right" Grid.Column="2" Grid.Row="0"/>

                                <ScrollViewer Grid.Row="1" Grid.Column="1" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Height="250">
                                    <ItemsControl x:Name="Screens"  ItemsSource="{Binding Screens, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" BorderThickness="0" >
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas Height="{Binding MaxHeight}" Width="{Binding MaxWidth}"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>

                                        <ItemsControl.ItemContainerStyle>
                                            <Style TargetType="ContentPresenter">
                                                <Setter Property="Canvas.Left" Value="{Binding Path=LeftLocation}" />
                                                <Setter Property="Canvas.Top" Value="{Binding Path=BottomLocation}" />
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>

                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <ToggleButton Content="screen" IsChecked="{Binding Selected, Mode=TwoWay}" Width="{Binding Width}" Height="{Binding Height}"
                                                                                VerticalAlignment="Top">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseRightButtonUp">
                                                            <i:InvokeCommandAction Command="{Binding RightClick}" CommandParameter="{Binding ID}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </ToggleButton>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>
                            </Grid>

                            <!--<TextBlock Text="{Binding PrimaryScreenID, StringFormat='Primary Screen ID: {0}'}" Style="{StaticResource MslTextBlock}"/>-->
                        </Border>
                        <Button  x:Name ="StartRemote" Content="Connect" FontSize="24" Width="275" Height="75" Command="{Binding BtnRemoteConnect}"/>
                    </StackPanel>
                    <!--#endregion-->

                    <!--#region C-Drive-->
                    <StackPanel Visibility="{Binding SelectedMode,Converter={StaticResource ModeToVisibiltyConverter},ConverterParameter='C-Drive'}">
                        <Button  x:Name ="StartCDrive" Content="Open C Drive" FontSize="24" Width="275" Height="76" Command="{Binding BtnCDriveConnect}" Margin="10"/>
                    </StackPanel>
                    <!--#endregion-->

                </StackPanel>
            </TabItem>

            <TabItem Header="Config">
                <DockPanel>
                    <DataGrid x:Name="ConfigData" Margin="10,20,0,10" ItemsSource="{Binding ConfigPCs.PCs, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              SelectedItem="{Binding ConfigPCs.Selected}" Height="550" Width="1000" DockPanel.Dock="Left" Background="Transparent" IsReadOnly="True"
                              VerticalScrollBarVisibility="Auto" AlternationCount="2" ColumnWidth="*" RowHeaderWidth="0" SelectedIndex="0" ColumnHeaderHeight="50">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Insert"
                                    Click="Insert_OnClick"/>

                                <MenuItem Header="Duplicate"
                                    Click="Duplicate_OnClick"/>

                                <MenuItem Header="Edit"
                                        Click="Edit_OnClick"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}" />

                                <MenuItem Header="Delete"
                                        Click="DeleteRow_OnClick"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.InputBindings>
                            <KeyBinding Key="Tab" Command="{Binding SavePressed}"/>
                        </DataGrid.InputBindings>
                    </DataGrid>
                </DockPanel>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>